package com.schedushare.common.domain.dto;

import java.sql.Time;
import java.util.Collection;
import java.util.Collections;

import com.google.gson.annotations.SerializedName;

/**
 * Schedule {@link RestEntity} passed between client and server as a JSON representation.
 * 
 * Simple user pojo that is structured to be serialized by JOOQ and automatically mapped.
 * Did not like the DTO generated by JOOQ so we chose to make our own.
 */
public class ScheduleEntity extends RestEntity {



	@SerializedName("time-blocks")
	private final Collection<TimeBlockEntity> timeBlocks;
	
	public static final String LAST_MODIFIED = "last-modified";
	public static final String USER_ID = "user-id";
	public static final String SCHEDULE_ID = "schedule-id";
	public static final String SCHEDULE_NAME = "schedule-name";
	public static final String SCHEDULE_ACTIVE = "active";
	
	@SerializedName(SCHEDULE_ID)
	private final int scheduleId;
	
	@SerializedName(SCHEDULE_NAME)
	private final String scheduleName;
	
	@SerializedName(SCHEDULE_ACTIVE)
	private final Boolean scheduleActive;

	@SerializedName(USER_ID)
	private String userId;
	
	@SerializedName(LAST_MODIFIED)
	private String lastModified;
	
	private Time t_lastModified;
	
	
	
	/**
	 * SQL constructor.
	 *
	 * @param scheduleName the schedule name
	 * @param scheduleActive the schedule active
	 * @param timeblocks the timeblocks
	 */
	public ScheduleEntity(final int ID, final String NAME,
			final Boolean ACTIVE, final String USER_ID, final Time LAST_MODIFIED) {
		this.scheduleId = ID;
		this.scheduleName = NAME;
		this.scheduleActive = ACTIVE;
		this.t_lastModified = LAST_MODIFIED;
		this.userId = USER_ID;
		this.timeBlocks = null;
	}
	
	/**
	 * JSON Constructor.
	 *
	 * @param scheduleName the schedule name
	 * @param scheduleActive the schedule active
	 * @param timeblocks the timeblocks
	 */
	public ScheduleEntity(final int ID, final String NAME,
			final Boolean ACTIVE, final String USER_ID, final String LAST_MODIFIED,
			final Collection<TimeBlockEntity> timeBlocks) {
		this.scheduleId = ID;
		this.userId = USER_ID;
		this.scheduleName = NAME;
		this.scheduleActive = ACTIVE;
		this.lastModified = LAST_MODIFIED;
		this.timeBlocks = timeBlocks;
	}
	
	public Collection<TimeBlockEntity> getTimeBlocks() {
		return timeBlocks != null ? timeBlocks : Collections.<TimeBlockEntity>emptyList();
	}
	
	public String getScheduleName() {
		return this.scheduleName;
	}
	
	public Boolean isScheduleActive() {
		return scheduleActive != null 
				? scheduleActive.booleanValue() : Boolean.FALSE;
	}

	public int getScheduleId() {
		return scheduleId;
	}

	public String getUserId() {
		return userId;
	}

	public String getLastModified() {
		return lastModified;
	}

	public Time getT_lastModified() {
		return t_lastModified;
	}

	
}
